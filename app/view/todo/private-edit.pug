extends ../layout/private

block title
  title Todoの修正｜ToDoリスト管理アプリ

block breadcrumb
  nav.mt-3(aria-label='パンくずリスト')
    .container
      ol.breadcrumb
        li.breadcrumb-item
          a(href='../../') ToDo
        li.breadcrumb-item
          a(href='../') 詳細
        li.breadcrumb-item
          a(href='./' aria-current='page') 修正

block main
  main#main(v-if='body')
    .container
      h1 ToDoの修正
      nav.mt-3(aria-label='メニュー')
        .d-flex.flex-wrap.gap-2
          a.btn.btn-outline-secondary(href='../') 戻る
      form.mt-3(role='form')
        .form-group.mb-3
          label.form-label(for='content') ToDoの内容
          input.form-control(type='text' name='content' id='content' aria-required='true' v-model='body.form.content' v-bind:class="{'is-invalid': body.validation.content.ok === false}")
          p.invalid-feedback
            template(v-if='body.validation.content.isNotEmpty === false')
              | ToDoの内容をご入力ください
        .d-grid
          button.btn.btn-primary(type='submit' v-on:click.prevent='onClickButtonSubmit') 修正

append script
  script(src='https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js')
  script.
    new Vue({
      el: '#main',

      data: {
        api: `/api/v1${window.location.pathname}`,
        body: null,
      },

      async created () {
        try {
          const response = await fetch(this.api + 'initialize')
          this.body = await response.json()
        } catch (err) {
          console.error(err.message)
          console.debug(err.stack)
        }
      },

      methods: {
        async onClickButtonSubmit () {
          try {
            const options = {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json; charset=UTF-8',
              },
              body: JSON.stringify({form: this.body.form}),
            }

            const response = await fetch(this.api + 'validate', options)
            const body = await response.json()

            this.body.validation = body.validation

            if (body.validation.ok) {
              const options = {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json; charset=UTF-8',
                },
                body: JSON.stringify({form: this.body.form}),
              }

              const response = await fetch(this.api + 'submit', options)
              const body = await response.json()

              if (body.ok) {
                window.location.assign(body.redirect)
                return
              }
            } else {
              window.location.assign('#page-top')
            }
          } catch (err) {
            console.error(err.message)
            console.debug(err.stack)
          }
        },
      },
    })
